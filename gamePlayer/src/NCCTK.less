body {
	font-family: sans-serif;
	--theme-color-huesat: 212deg 70%;
	--general-bg: hsl(var(--theme-color-huesat) 20%);
	--secondary-bg: hsl(var(--theme-color-huesat) 13%);
	--page-bg-brightness: 40%;
	--page-bg-darker-color: hsl(
		var(--theme-color-huesat) calc(var(--page-bg-brightness) * 100 / 125)
	);
	--page-bg-lighter-color: hsl(
		var(--theme-color-huesat) calc(var(--page-bg-brightness) * 125 / 100)
	);
	--text-color: hsl(0, 0%, 85%);
	--text-color-disabled: hsl(0, 0%, 40%);
	--icon-color: var(--text-color);
	--timer-bg: #000000;
	--time-unknown: hsl(210, 100%, 50%);
	--time-better: hsl(120, 100%, 25%);
	--time-worse: hsl(0, 100%, 40%);
	color: var(--text-color);
	&.gameBody {
		margin: 0;
		display: flex;
		flex-direction: row;
		width: 100vw;
		height: 100vh;
		background: linear-gradient(
			to top left,
			var(--page-bg-darker-color),
			var(--page-bg-lighter-color)
		);
	}
}

.container {
	border-radius: 5px;
	background: var(--general-bg);
}

.closedPage {
	display: none !important;
}

button {
	--button-high-color: hsl(var(--theme-color-huesat) 40%);
	--button-low-color: hsl(var(--theme-color-huesat) 33%);
	color: var(--text-color);
	padding: 0 0.4em;
	border-width: 2px;
	border-style: solid;
	border-color: var(--button-high-color) var(--button-low-color)
		var(--button-low-color) var(--button-high-color);
	border-radius: 2px;
	background-image: linear-gradient(
		to bottom,
		var(--button-high-color),
		var(--button-low-color)
	);
	&:enabled {
		&:hover {
			--button-high-color: hsl(var(--theme-color-huesat) 45%);
			--button-low-color: hsl(var(--theme-color-huesat) 38%);
		}
		&:active {
			--button-high-color: hsl(var(--theme-color-huesat) 30%);
			--button-low-color: hsl(var(--theme-color-huesat) 23%);
		}
	}
	&:disabled {
		--button-high-color: hsl(var(--theme-color-huesat) 20%);
		--button-low-color: hsl(var(--theme-color-huesat) 13%);
		color: var(--text-color-disabled);
	}
}

/* Tooltip */

.tooltipRoot {
	width: fit-content;
	transform-origin: 10px 10px;
	display: flex;
	opacity: 0.9;
	animation: openTooltip 0.75s cubic-bezier(0.2, 0, 0.2, 1) forwards;
	position: absolute;
	left: 110%;
	top: 35%;
	z-index: 100;
	user-select: none;

	.tooltipBox {
		border-radius: 5px;
		flex-shrink: 0;
		backdrop-filter: blur(3px);
		padding: 0.6em 0.75em;
	}
	.tooltipTriangle {
		width: 0;
		height: 0;
		backdrop-filter: blur(3px);

		display: inline-block;
		border: solid 10px transparent;
		border-right: solid 10px var(--general-bg);
		position: relative;
		top: 5px;
		margin-right: -1px;
	}
}

@keyframes openTooltip {
	from {
		transform: scale(40%);
		opacity: 0;
	}

	50% {
		opacity: 0.9;
	}

	100% {
		opacity: 0.9;
		transform: scale(100%);
	}
}
@keyframes closeTooltip {
	from {
		opacity: 0.9;
		transform: scale(100%);
	}

	50% {
		opacity: 0;
	}

	to {
		opacity: 0;
		transform: scale(40%);
	}
}
.buttonTooltipBox {
	display: flex;
	flex-direction: column;
	row-gap: 0.5em;

	hr {
		margin: 0;
	}

	.buttonTooltipRow {
		display: flex;
		flex-direction: row;
		padding: 0.2em 0.5em;
		border-radius: 3px;
		&:focus-visible {
			outline: none;
		}
		&:not([data-disabled]) {
			cursor: pointer;
			&:hover,
			&:focus-visible {
				background: var(--secondary-bg);
			}
		}
		&[data-disabled] {
			color: var(--text-color-disabled);
		}

		.buttonTooltipKey {
			padding-left: 2em;
			margin-left: auto;
			padding-bottom: 0.2em;
		}
	}
}
/* Copied wholesale from https://github.com/eevee/lexys-labyrinth/ */
kbd {
	padding: 0 0.25em;
	border: 1px solid currentColor;
	border-radius: 0.25em;
	box-shadow: 0 2px 0 currentColor;
	text-align: center;
	text-transform: uppercase;
	width: fit-content;
}

/* The sidebar */

.sidebar {
	border-radius: 0px;
	width: min(20%, 150px);
	height: 100%;
	display: flex;
	flex-direction: column;
	.sidebarButton {
		margin: 1em;
		display: flex;
		position: relative;
		img,
		.levelIconContainer {
			width: 80%;
			user-select: none;
			margin: auto;
			display: block;
			cursor: pointer;
		}
		// The level button, which has a dynamic number in it
		.levelIconContainer {
			position: relative;
			img {
				width: 100%;
			}
			#levelIconText {
				position: absolute;
				top: 25%;
				height: 35%;
				left: 12%;
				width: 75%;
				font-size: 2.3em;
				color: var(--icon-color);
				text-align: center;
				user-select: none;
				pointer-events: none;
			}
		}
	}

	.bottomButton {
		margin-top: auto;
	}
}

#loadingPage {
	width: fit-content;
	height: fit-content;
	margin: auto;
	p {
		font-style: italic;
	}
}

/* The game player */

#levelPlayerPage {
	padding: var(--quarter-tile);
	border-radius: 5px;
	margin: auto;
	display: grid;
	gap: var(--quarter-tile);
	grid-template:
		"viewport stats" min-content
		"viewport inventory" min-content
		"viewport hint" 1fr
		/ min-content min-content;
	--base-tile-size: 32px;
	--tile-scale: 2;
	--tile-size: calc(var(--base-tile-size) * var(--tile-scale));
	--quarter-tile: calc(var(--tile-size) / 4);
	.stats {
		grid-area: stats;
		display: grid;
		grid-template-columns: auto auto;
		grid-template-rows: repeat(auto-fill, 1em);
		gap: var(--quarter-tile);
		padding: var(--quarter-tile);
		padding-bottom: 0;
		font-size: 1.2em;
		white-space: nowrap;
		output {
			text-align: right;
		}
	}
	.viewportArea {
		grid-area: viewport;
		position: relative;
		width: calc(var(--tile-size) * var(--level-camera-width));
		height: calc(var(--tile-size) * var(--level-camera-height));
	}
	#levelViewportCanvas {
		width: 100%;
		height: 100%;
	}
	#levelInventoryCanvas {
		grid-area: inventory;
		margin: auto;
		width: calc(var(--tile-size) * 4);
		height: calc(var(--tile-size) * 2);
		background-color: azure;
	}
	#hintBox {
		grid-area: hint;
		background-color: var(--secondary-bg);
		padding: 0.5em 0.5em;
	}
}

/* Misc game player sections */

.pixelCanvas {
	image-rendering: -moz-crisp-edges;
	image-rendering: -webkit-crisp-edges;
	image-rendering: pixelated;
	image-rendering: crisp-edges;
	image-rendering: optimizeSpeed;
}

/* Viewport overlay */

#levelViewportOverlay {
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	display: grid;
	gap: 0px 0px;
	grid-template:
		". . ." var(--tile-size)
		". top ." var(--tile-size)
		". . ." 0.5fr
		". middle ." 1fr
		". . ." 0.5fr
		". bottom ." calc(var(--tile-size) * 1.5)
		". . ." calc(var(--tile-size) * 0.75)
		/ 0.15fr 2.7fr 0.15fr;
	h3.deathOnly,
	h3.timeoutOnly {
		display: none;
	}
	&[data-game-state="won"] {
		background-image: radial-gradient(#4406, #660d);
		#overlayWinContents {
			display: contents;
		}
	}
	&[data-game-state="timeout"] {
		background-image: radial-gradient(#0084, #0088);
		#overlayLoseContents {
			display: contents;
			h3.timeoutOnly {
				display: initial;
			}
		}
	}
	&[data-game-state="death"] {
		background-image: radial-gradient(#1004, #2008);
		#overlayLoseContents {
			display: contents;
			h3.deathOnly {
				display: initial;
			}
		}
	}
	&[data-paused] {
		background-image: radial-gradient(#0004, #0008);
		#overlayPauseContents {
			display: contents;
		}
	}
	&[data-preplay] {
		background-image: radial-gradient(#0002, #0004);
		#overlayPreplayContents {
			display: contents;
		}
	}
	> * {
		display: none;
		h3 {
			grid-area: top;
			text-align: center;
			font-size: 300%;
			margin: 0;
		}
		.statsContainer {
			grid-area: middle;
			padding: var(--quarter-tile);
		}
		.buttonContainer {
			box-sizing: border-box;
			justify-content: stretch;
			grid-area: bottom;
			gap: var(--quarter-tile);
			padding: var(--quarter-tile);
			height: 100%;
			display: flex;
			flex-direction: row;
			button {
				flex: 1;
				font-size: 120%;
			}
		}
	}
}

/* Set selector (stub) */

#setSelectorPage {
	margin: auto;
	padding: 0.6em 0.75em;
	display: grid;
	grid-template-columns: 1fr 1fr;
	grid-template-rows: 1fr 1fr;
	gap: 0.5em 0.5em;
	grid-template-areas:
		"big-button big-button"
		". .";
	.bigButton {
		grid-area: big-button;
	}
}

#fileLoader,
#directoryLoader {
	display: none;
}
